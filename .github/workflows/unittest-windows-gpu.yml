name: Unittests on Windows GPU

on:
  pull_request:
  push:
    branches:
      - nightly
      - main
      - release/*
  workflow_dispatch:

jobs:
  unittests-windows-gpu:
    uses: pytorch/test-infra/.github/workflows/windows_job.yml@main
    with:
      repository: pytorch/audio
      runner: windows.g5.4xlarge.nvidia.gpu
      gpu-arch-type: cuda
      gpu-arch-version: "11.7"
      timeout: 180
      script: |
        # Mark Build Directory Safe
        git config --global --add safe.directory /__w/audio/audio

        # Set up Environment Variables
        export PYTHON_VERSION="3.8"
        export CU_VERSION="11.7"
        export CUDA_VERSION="11.7"
        export USE_FFMPEG="1"

        # Set CHANNEL
        if [[(${GITHUB_EVENT_NAME} = 'pull_request' && (${GITHUB_BASE_REF} = 'release'*)) || (${GITHUB_REF} = 'refs/heads/release'*) ]]; then
          export UPLOAD_CHANNEL=test
        else
          export UPLOAD_CHANNEL=nightly
        fi

        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_CMD_APPLY_CMVN_SLIDING="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_CMD_COMPUTE_FBANK_FEATS="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_CMD_COMPUTE_KALDI_PITCH_FEATS="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_CMD_COMPUTE_MFCC_FEATS="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_CMD_COMPUTE_SPECTROGRAM_FEATS="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_CMD_SOX="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_KALDI="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_SOX="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_ON_PYTHON_310="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_MOD_sentencepiece="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_AUDIO_OUT_DEVICE="1"
        export TORCHAUDIO_TEST_ALLOW_SKIP_IF_NO_MACOS="1"

        ./.circleci/unittest/windows/scripts/setup_env.sh
        ./packaging/windows/internal/cuda_install.bat
        ./packaging/windows/internal/driver_update.bat
        ./.circleci/unittest/windows/scripts/install.sh
        ./.circleci/unittest/windows/scripts/run_test.sh
